// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortManagement.Infrastructure.Data;

#nullable disable

namespace PortManagement.Infrastructure.Migrations
{
    [DbContext(typeof(PortDbContext))]
    [Migration("20250331135244_UpdateCascadeDeleteInCargas")]
    partial class UpdateCascadeDeleteInCargas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PortManagement.Domain.Entities.Buques", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bandera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buques");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Cargas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuqueId")
                        .HasColumnType("int");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("TipoCarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuqueId");

                    b.ToTable("Cargas");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Operaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuqueId")
                        .HasColumnType("int");

                    b.Property<int>("CargaId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoOperacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuqueId");

                    b.HasIndex("CargaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Operaciones");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Cargas", b =>
                {
                    b.HasOne("PortManagement.Domain.Entities.Buques", "Buque")
                        .WithMany("Cargas")
                        .HasForeignKey("BuqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buque");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Operaciones", b =>
                {
                    b.HasOne("PortManagement.Domain.Entities.Buques", "Buque")
                        .WithMany("Operaciones")
                        .HasForeignKey("BuqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PortManagement.Domain.Entities.Cargas", "Carga")
                        .WithMany("Operaciones")
                        .HasForeignKey("CargaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortManagement.Domain.Entities.Usuarios", "Usuario")
                        .WithMany("Operaciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Buque");

                    b.Navigation("Carga");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Buques", b =>
                {
                    b.Navigation("Cargas");

                    b.Navigation("Operaciones");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Cargas", b =>
                {
                    b.Navigation("Operaciones");
                });

            modelBuilder.Entity("PortManagement.Domain.Entities.Usuarios", b =>
                {
                    b.Navigation("Operaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
